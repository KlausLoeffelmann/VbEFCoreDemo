// <auto-generated />
using EF1DemoSchemaUpdater;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EF1DemoSchemaUpdater.Migrations
{
    [DbContext(typeof(InheritedContext))]
    [Migration("20170921155411_EventSchemaChange")]
    partial class EventSchemaChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseLayer.ActionTarget", b =>
                {
                    b.Property<Guid>("IdActionTarget")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset>("DateLastEdited");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdActionTarget");

                    b.ToTable("ActionTargets");
                });

            modelBuilder.Entity("DatabaseLayer.Event", b =>
                {
                    b.Property<Guid>("IdEvent")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ActionTargetIdActionTarget");

                    b.Property<DateTimeOffset?>("BookingDate");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset>("DateLastEdited");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("Duration");

                    b.Property<TimeSpan?>("EndTime");

                    b.Property<Guid?>("EventSourceIdEventSource");

                    b.Property<TimeSpan?>("StartTime");

                    b.HasKey("IdEvent");

                    b.HasIndex("ActionTargetIdActionTarget");

                    b.HasIndex("EventSourceIdEventSource");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DatabaseLayer.EventSource", b =>
                {
                    b.Property<Guid>("IdEventSource")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset>("DateLastEdited");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdEventSource");

                    b.ToTable("EventSources");
                });

            modelBuilder.Entity("DatabaseLayer.Event", b =>
                {
                    b.HasOne("DatabaseLayer.ActionTarget", "ActionTarget")
                        .WithMany()
                        .HasForeignKey("ActionTargetIdActionTarget");

                    b.HasOne("DatabaseLayer.EventSource", "EventSource")
                        .WithMany()
                        .HasForeignKey("EventSourceIdEventSource");
                });
#pragma warning restore 612, 618
        }
    }
}
